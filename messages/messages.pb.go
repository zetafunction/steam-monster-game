// Code generated by protoc-gen-go.
// source: messages.proto
// DO NOT EDIT!

/*
Package messages is a generated protocol buffer package.

It is generated from these files:
	messages.proto

It has these top-level messages:
	CTowerAttack_GameData
	CTowerAttack_Stats
	CTowerAttack_PlayerData
	CTowerAttack_PlayerTechTree
	CTowerAttack_GetGameData_Request
	CTowerAttack_GetGameData_Response
	CTowerAttack_GetPlayerNames_Request
	CTowerAttack_GetPlayerNames_Response
	CTowerAttack_GetPlayerData_Request
	CTowerAttack_GetPlayerData_Response
	CTowerAttack_UseAbilities_Request
	CTowerAttack_UseAbilities_Response
	CTowerAttack_ChooseUpgrade_Request
	CTowerAttack_ChooseUpgrade_Response
	CTowerAttack_GetTuningData_Request
	CTowerAttack_GetTuningData_Response
	CTowerAttack_GetDailyStatsRollup_Request
	CTowerAttack_GetDailyStatsRollup_Response
	CTowerAttack_HandleGameEvent_Request
	CTowerAttack_HandleGameEvent_Response
	CTowerAttack_UseBadgePoints_Request
	CTowerAttack_UseBadgePoints_Response
*/
package messages

import proto "github.com/golang/protobuf/proto"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = math.Inf

type EMiniGameType int32

const (
	EMiniGameType_k_EMiniGameType_Invalid     EMiniGameType = 0
	EMiniGameType_k_EMiniGameType_TowerAttack EMiniGameType = 1
)

var EMiniGameType_name = map[int32]string{
	0: "k_EMiniGameType_Invalid",
	1: "k_EMiniGameType_TowerAttack",
}
var EMiniGameType_value = map[string]int32{
	"k_EMiniGameType_Invalid":     0,
	"k_EMiniGameType_TowerAttack": 1,
}

func (x EMiniGameType) Enum() *EMiniGameType {
	p := new(EMiniGameType)
	*p = x
	return p
}
func (x EMiniGameType) String() string {
	return proto.EnumName(EMiniGameType_name, int32(x))
}
func (x *EMiniGameType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EMiniGameType_value, data, "EMiniGameType")
	if err != nil {
		return err
	}
	*x = EMiniGameType(value)
	return nil
}

type EMiniGameStatus int32

const (
	EMiniGameStatus_k_EMiniGameStatus_Invalid           EMiniGameStatus = 0
	EMiniGameStatus_k_EMiniGameStatus_WaitingForPlayers EMiniGameStatus = 1
	EMiniGameStatus_k_EMiniGameStatus_Running           EMiniGameStatus = 2
	EMiniGameStatus_k_EMiniGameStatus_Ended             EMiniGameStatus = 3
)

var EMiniGameStatus_name = map[int32]string{
	0: "k_EMiniGameStatus_Invalid",
	1: "k_EMiniGameStatus_WaitingForPlayers",
	2: "k_EMiniGameStatus_Running",
	3: "k_EMiniGameStatus_Ended",
}
var EMiniGameStatus_value = map[string]int32{
	"k_EMiniGameStatus_Invalid":           0,
	"k_EMiniGameStatus_WaitingForPlayers": 1,
	"k_EMiniGameStatus_Running":           2,
	"k_EMiniGameStatus_Ended":             3,
}

func (x EMiniGameStatus) Enum() *EMiniGameStatus {
	p := new(EMiniGameStatus)
	*p = x
	return p
}
func (x EMiniGameStatus) String() string {
	return proto.EnumName(EMiniGameStatus_name, int32(x))
}
func (x *EMiniGameStatus) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(EMiniGameStatus_value, data, "EMiniGameStatus")
	if err != nil {
		return err
	}
	*x = EMiniGameStatus(value)
	return nil
}

type ETowerAttackElement int32

const (
	ETowerAttackElement_k_ETowerAttackElement_Invalid ETowerAttackElement = 0
	ETowerAttackElement_k_ETowerAttackElement_Fire    ETowerAttackElement = 1
	ETowerAttackElement_k_ETowerAttackElement_Water   ETowerAttackElement = 2
	ETowerAttackElement_k_ETowerAttackElement_Air     ETowerAttackElement = 3
	ETowerAttackElement_k_ETowerAttackElement_Earth   ETowerAttackElement = 4
)

var ETowerAttackElement_name = map[int32]string{
	0: "k_ETowerAttackElement_Invalid",
	1: "k_ETowerAttackElement_Fire",
	2: "k_ETowerAttackElement_Water",
	3: "k_ETowerAttackElement_Air",
	4: "k_ETowerAttackElement_Earth",
}
var ETowerAttackElement_value = map[string]int32{
	"k_ETowerAttackElement_Invalid": 0,
	"k_ETowerAttackElement_Fire":    1,
	"k_ETowerAttackElement_Water":   2,
	"k_ETowerAttackElement_Air":     3,
	"k_ETowerAttackElement_Earth":   4,
}

func (x ETowerAttackElement) Enum() *ETowerAttackElement {
	p := new(ETowerAttackElement)
	*p = x
	return p
}
func (x ETowerAttackElement) String() string {
	return proto.EnumName(ETowerAttackElement_name, int32(x))
}
func (x *ETowerAttackElement) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETowerAttackElement_value, data, "ETowerAttackElement")
	if err != nil {
		return err
	}
	*x = ETowerAttackElement(value)
	return nil
}

type ETowerAttackAbility int32

const (
	ETowerAttackAbility_k_ETowerAttackAbility_Invalid      ETowerAttackAbility = 0
	ETowerAttackAbility_k_ETowerAttackAbility_Attack       ETowerAttackAbility = 1
	ETowerAttackAbility_k_ETowerAttackAbility_ChangeLane   ETowerAttackAbility = 2
	ETowerAttackAbility_k_ETowerAttackAbility_Respawn      ETowerAttackAbility = 3
	ETowerAttackAbility_k_ETowerAttackAbility_ChangeTarget ETowerAttackAbility = 4
	// support abilities
	ETowerAttackAbility_k_ETowerAttackAbility_Support_IncreaseDamage         ETowerAttackAbility = 5
	ETowerAttackAbility_k_ETowerAttackAbility_Support_IncreaseCritPercentage ETowerAttackAbility = 6
	ETowerAttackAbility_k_ETowerAttackAbility_Support_Heal                   ETowerAttackAbility = 7
	ETowerAttackAbility_k_ETowerAttackAbility_Support_IncreaseGoldDropped    ETowerAttackAbility = 8
	ETowerAttackAbility_k_ETowerAttackAbility_Support_DecreaseCooldowns      ETowerAttackAbility = 9
	// offensive abilities
	ETowerAttackAbility_k_ETowerAttackAbility_Offensive_HighDamageOneTarget ETowerAttackAbility = 10
	ETowerAttackAbility_k_ETowerAttackAbility_Offensive_DamageAllTargets    ETowerAttackAbility = 11
	ETowerAttackAbility_k_ETowerAttackAbility_Offensive_DOTAllTargets       ETowerAttackAbility = 12
	// item
	ETowerAttackAbility_k_ETowerAttackAbility_Item_Resurrection                      ETowerAttackAbility = 13
	ETowerAttackAbility_k_ETowerAttackAbility_Item_KillTower                         ETowerAttackAbility = 14
	ETowerAttackAbility_k_ETowerAttackAbility_Item_KillMob                           ETowerAttackAbility = 15
	ETowerAttackAbility_k_ETowerAttackAbility_Item_MaxElementalDamage                ETowerAttackAbility = 16
	ETowerAttackAbility_k_ETowerAttackAbility_Item_GoldPerClick                      ETowerAttackAbility = 17
	ETowerAttackAbility_k_ETowerAttackAbility_Item_IncreaseCritPercentagePermanently ETowerAttackAbility = 18
	ETowerAttackAbility_k_ETowerAttackAbility_Item_IncreaseHPPermanently             ETowerAttackAbility = 19
	ETowerAttackAbility_k_ETowerAttackAbility_Item_GoldForDamage                     ETowerAttackAbility = 20
	ETowerAttackAbility_k_ETowerAttackAbility_Item_Invulnerability                   ETowerAttackAbility = 21
	ETowerAttackAbility_k_ETowerAttackAbility_Item_GiveGold                          ETowerAttackAbility = 22
	ETowerAttackAbility_k_ETowerAttackAbility_Item_StealHealth                       ETowerAttackAbility = 23
	ETowerAttackAbility_k_ETowerAttackAbility_Item_ReflectDamage                     ETowerAttackAbility = 24
	ETowerAttackAbility_k_ETowerAttackAbility_Item_GiveRandomItem                    ETowerAttackAbility = 25
	ETowerAttackAbility_k_ETowerAttackAbility_Item_SkipLevels                        ETowerAttackAbility = 26
	ETowerAttackAbility_k_ETowerAttackAbility_Item_ClearCooldowns                    ETowerAttackAbility = 27
	ETowerAttackAbility_k_ETowerAttackAbility_Item_Start                             ETowerAttackAbility = 13
	ETowerAttackAbility_k_ETowerAttackAbility_Item_End                               ETowerAttackAbility = 27
	ETowerAttackAbility_k_ETowerAttackAbility_MaxAbilities                           ETowerAttackAbility = 28
)

var ETowerAttackAbility_name = map[int32]string{
	0:  "k_ETowerAttackAbility_Invalid",
	1:  "k_ETowerAttackAbility_Attack",
	2:  "k_ETowerAttackAbility_ChangeLane",
	3:  "k_ETowerAttackAbility_Respawn",
	4:  "k_ETowerAttackAbility_ChangeTarget",
	5:  "k_ETowerAttackAbility_Support_IncreaseDamage",
	6:  "k_ETowerAttackAbility_Support_IncreaseCritPercentage",
	7:  "k_ETowerAttackAbility_Support_Heal",
	8:  "k_ETowerAttackAbility_Support_IncreaseGoldDropped",
	9:  "k_ETowerAttackAbility_Support_DecreaseCooldowns",
	10: "k_ETowerAttackAbility_Offensive_HighDamageOneTarget",
	11: "k_ETowerAttackAbility_Offensive_DamageAllTargets",
	12: "k_ETowerAttackAbility_Offensive_DOTAllTargets",
	13: "k_ETowerAttackAbility_Item_Resurrection",
	14: "k_ETowerAttackAbility_Item_KillTower",
	15: "k_ETowerAttackAbility_Item_KillMob",
	16: "k_ETowerAttackAbility_Item_MaxElementalDamage",
	17: "k_ETowerAttackAbility_Item_GoldPerClick",
	18: "k_ETowerAttackAbility_Item_IncreaseCritPercentagePermanently",
	19: "k_ETowerAttackAbility_Item_IncreaseHPPermanently",
	20: "k_ETowerAttackAbility_Item_GoldForDamage",
	21: "k_ETowerAttackAbility_Item_Invulnerability",
	22: "k_ETowerAttackAbility_Item_GiveGold",
	23: "k_ETowerAttackAbility_Item_StealHealth",
	24: "k_ETowerAttackAbility_Item_ReflectDamage",
	25: "k_ETowerAttackAbility_Item_GiveRandomItem",
	26: "k_ETowerAttackAbility_Item_SkipLevels",
	27: "k_ETowerAttackAbility_Item_ClearCooldowns",
	// Duplicate value: 13: "k_ETowerAttackAbility_Item_Start",
	// Duplicate value: 27: "k_ETowerAttackAbility_Item_End",
	28: "k_ETowerAttackAbility_MaxAbilities",
}
var ETowerAttackAbility_value = map[string]int32{
	"k_ETowerAttackAbility_Invalid":                                0,
	"k_ETowerAttackAbility_Attack":                                 1,
	"k_ETowerAttackAbility_ChangeLane":                             2,
	"k_ETowerAttackAbility_Respawn":                                3,
	"k_ETowerAttackAbility_ChangeTarget":                           4,
	"k_ETowerAttackAbility_Support_IncreaseDamage":                 5,
	"k_ETowerAttackAbility_Support_IncreaseCritPercentage":         6,
	"k_ETowerAttackAbility_Support_Heal":                           7,
	"k_ETowerAttackAbility_Support_IncreaseGoldDropped":            8,
	"k_ETowerAttackAbility_Support_DecreaseCooldowns":              9,
	"k_ETowerAttackAbility_Offensive_HighDamageOneTarget":          10,
	"k_ETowerAttackAbility_Offensive_DamageAllTargets":             11,
	"k_ETowerAttackAbility_Offensive_DOTAllTargets":                12,
	"k_ETowerAttackAbility_Item_Resurrection":                      13,
	"k_ETowerAttackAbility_Item_KillTower":                         14,
	"k_ETowerAttackAbility_Item_KillMob":                           15,
	"k_ETowerAttackAbility_Item_MaxElementalDamage":                16,
	"k_ETowerAttackAbility_Item_GoldPerClick":                      17,
	"k_ETowerAttackAbility_Item_IncreaseCritPercentagePermanently": 18,
	"k_ETowerAttackAbility_Item_IncreaseHPPermanently":             19,
	"k_ETowerAttackAbility_Item_GoldForDamage":                     20,
	"k_ETowerAttackAbility_Item_Invulnerability":                   21,
	"k_ETowerAttackAbility_Item_GiveGold":                          22,
	"k_ETowerAttackAbility_Item_StealHealth":                       23,
	"k_ETowerAttackAbility_Item_ReflectDamage":                     24,
	"k_ETowerAttackAbility_Item_GiveRandomItem":                    25,
	"k_ETowerAttackAbility_Item_SkipLevels":                        26,
	"k_ETowerAttackAbility_Item_ClearCooldowns":                    27,
	"k_ETowerAttackAbility_Item_Start":                             13,
	"k_ETowerAttackAbility_Item_End":                               27,
	"k_ETowerAttackAbility_MaxAbilities":                           28,
}

func (x ETowerAttackAbility) Enum() *ETowerAttackAbility {
	p := new(ETowerAttackAbility)
	*p = x
	return p
}
func (x ETowerAttackAbility) String() string {
	return proto.EnumName(ETowerAttackAbility_name, int32(x))
}
func (x *ETowerAttackAbility) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETowerAttackAbility_value, data, "ETowerAttackAbility")
	if err != nil {
		return err
	}
	*x = ETowerAttackAbility(value)
	return nil
}

type ETowerAttackUpgradeType int32

const (
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_HitPoints              ETowerAttackUpgradeType = 0
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_DPS                    ETowerAttackUpgradeType = 1
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_ClickDamage            ETowerAttackUpgradeType = 2
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_DamageMultiplier_Fire  ETowerAttackUpgradeType = 3
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_DamageMultiplier_Water ETowerAttackUpgradeType = 4
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_DamageMultiplier_Air   ETowerAttackUpgradeType = 5
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_DamageMultiplier_Earth ETowerAttackUpgradeType = 6
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_DamageMultiplier_Crit  ETowerAttackUpgradeType = 7
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_PurchaseAbility        ETowerAttackUpgradeType = 8
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_BossLootDropPercentage ETowerAttackUpgradeType = 9
	ETowerAttackUpgradeType_k_ETowerAttackUpgradeType_MaxTypes               ETowerAttackUpgradeType = 10
)

var ETowerAttackUpgradeType_name = map[int32]string{
	0:  "k_ETowerAttackUpgradeType_HitPoints",
	1:  "k_ETowerAttackUpgradeType_DPS",
	2:  "k_ETowerAttackUpgradeType_ClickDamage",
	3:  "k_ETowerAttackUpgradeType_DamageMultiplier_Fire",
	4:  "k_ETowerAttackUpgradeType_DamageMultiplier_Water",
	5:  "k_ETowerAttackUpgradeType_DamageMultiplier_Air",
	6:  "k_ETowerAttackUpgradeType_DamageMultiplier_Earth",
	7:  "k_ETowerAttackUpgradeType_DamageMultiplier_Crit",
	8:  "k_ETowerAttackUpgradeType_PurchaseAbility",
	9:  "k_ETowerAttackUpgradeType_BossLootDropPercentage",
	10: "k_ETowerAttackUpgradeType_MaxTypes",
}
var ETowerAttackUpgradeType_value = map[string]int32{
	"k_ETowerAttackUpgradeType_HitPoints":              0,
	"k_ETowerAttackUpgradeType_DPS":                    1,
	"k_ETowerAttackUpgradeType_ClickDamage":            2,
	"k_ETowerAttackUpgradeType_DamageMultiplier_Fire":  3,
	"k_ETowerAttackUpgradeType_DamageMultiplier_Water": 4,
	"k_ETowerAttackUpgradeType_DamageMultiplier_Air":   5,
	"k_ETowerAttackUpgradeType_DamageMultiplier_Earth": 6,
	"k_ETowerAttackUpgradeType_DamageMultiplier_Crit":  7,
	"k_ETowerAttackUpgradeType_PurchaseAbility":        8,
	"k_ETowerAttackUpgradeType_BossLootDropPercentage": 9,
	"k_ETowerAttackUpgradeType_MaxTypes":               10,
}

func (x ETowerAttackUpgradeType) Enum() *ETowerAttackUpgradeType {
	p := new(ETowerAttackUpgradeType)
	*p = x
	return p
}
func (x ETowerAttackUpgradeType) String() string {
	return proto.EnumName(ETowerAttackUpgradeType_name, int32(x))
}
func (x *ETowerAttackUpgradeType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETowerAttackUpgradeType_value, data, "ETowerAttackUpgradeType")
	if err != nil {
		return err
	}
	*x = ETowerAttackUpgradeType(value)
	return nil
}

type ETowerAttackEnemyType int32

const (
	ETowerAttackEnemyType_k_ETowerAttackEnemyType_Tower       ETowerAttackEnemyType = 0
	ETowerAttackEnemyType_k_ETowerAttackEnemyType_Mob         ETowerAttackEnemyType = 1
	ETowerAttackEnemyType_k_ETowerAttackEnemyType_Boss        ETowerAttackEnemyType = 2
	ETowerAttackEnemyType_k_ETowerAttackEnemyType_MiniBoss    ETowerAttackEnemyType = 3
	ETowerAttackEnemyType_k_ETowerAttackEnemyType_TreasureMob ETowerAttackEnemyType = 4
	ETowerAttackEnemyType_k_ETowerAttackEnemyType_Max         ETowerAttackEnemyType = 5
)

var ETowerAttackEnemyType_name = map[int32]string{
	0: "k_ETowerAttackEnemyType_Tower",
	1: "k_ETowerAttackEnemyType_Mob",
	2: "k_ETowerAttackEnemyType_Boss",
	3: "k_ETowerAttackEnemyType_MiniBoss",
	4: "k_ETowerAttackEnemyType_TreasureMob",
	5: "k_ETowerAttackEnemyType_Max",
}
var ETowerAttackEnemyType_value = map[string]int32{
	"k_ETowerAttackEnemyType_Tower":       0,
	"k_ETowerAttackEnemyType_Mob":         1,
	"k_ETowerAttackEnemyType_Boss":        2,
	"k_ETowerAttackEnemyType_MiniBoss":    3,
	"k_ETowerAttackEnemyType_TreasureMob": 4,
	"k_ETowerAttackEnemyType_Max":         5,
}

func (x ETowerAttackEnemyType) Enum() *ETowerAttackEnemyType {
	p := new(ETowerAttackEnemyType)
	*p = x
	return p
}
func (x ETowerAttackEnemyType) String() string {
	return proto.EnumName(ETowerAttackEnemyType_name, int32(x))
}
func (x *ETowerAttackEnemyType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETowerAttackEnemyType_value, data, "ETowerAttackEnemyType")
	if err != nil {
		return err
	}
	*x = ETowerAttackEnemyType(value)
	return nil
}

type ETowerAttackEvent int32

const (
	ETowerAttackEvent_k_ETowerAttackEvent_Invalid               ETowerAttackEvent = 0
	ETowerAttackEvent_k_ETowerAttackEvent_NewStoreDeals_Morning ETowerAttackEvent = 1
	ETowerAttackEvent_k_ETowerAttackEvent_NewStoreDeals_Evening ETowerAttackEvent = 2
)

var ETowerAttackEvent_name = map[int32]string{
	0: "k_ETowerAttackEvent_Invalid",
	1: "k_ETowerAttackEvent_NewStoreDeals_Morning",
	2: "k_ETowerAttackEvent_NewStoreDeals_Evening",
}
var ETowerAttackEvent_value = map[string]int32{
	"k_ETowerAttackEvent_Invalid":               0,
	"k_ETowerAttackEvent_NewStoreDeals_Morning": 1,
	"k_ETowerAttackEvent_NewStoreDeals_Evening": 2,
}

func (x ETowerAttackEvent) Enum() *ETowerAttackEvent {
	p := new(ETowerAttackEvent)
	*p = x
	return p
}
func (x ETowerAttackEvent) String() string {
	return proto.EnumName(ETowerAttackEvent_name, int32(x))
}
func (x *ETowerAttackEvent) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ETowerAttackEvent_value, data, "ETowerAttackEvent")
	if err != nil {
		return err
	}
	*x = ETowerAttackEvent(value)
	return nil
}

type CTowerAttack_GameData struct {
	Level               *uint32                        `protobuf:"varint,1,opt,name=level" json:"level,omitempty"`
	Lanes               []*CTowerAttack_GameData_Lane  `protobuf:"bytes,2,rep,name=lanes" json:"lanes,omitempty"`
	Timestamp           *uint32                        `protobuf:"varint,3,opt,name=timestamp" json:"timestamp,omitempty"`
	Status              *EMiniGameStatus               `protobuf:"varint,4,opt,name=status,enum=EMiniGameStatus" json:"status,omitempty"`
	Events              []*CTowerAttack_GameData_Event `protobuf:"bytes,5,rep,name=events" json:"events,omitempty"`
	TimestampGameStart  *uint32                        `protobuf:"varint,6,opt,name=timestamp_game_start" json:"timestamp_game_start,omitempty"`
	TimestampLevelStart *uint32                        `protobuf:"varint,7,opt,name=timestamp_level_start" json:"timestamp_level_start,omitempty"`
	UniverseState       *string                        `protobuf:"bytes,8,opt,name=universe_state" json:"universe_state,omitempty"`
	XXX_unrecognized    []byte                         `json:"-"`
}

func (m *CTowerAttack_GameData) Reset()         { *m = CTowerAttack_GameData{} }
func (m *CTowerAttack_GameData) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GameData) ProtoMessage()    {}

func (m *CTowerAttack_GameData) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CTowerAttack_GameData) GetLanes() []*CTowerAttack_GameData_Lane {
	if m != nil {
		return m.Lanes
	}
	return nil
}

func (m *CTowerAttack_GameData) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

func (m *CTowerAttack_GameData) GetStatus() EMiniGameStatus {
	if m != nil && m.Status != nil {
		return *m.Status
	}
	return EMiniGameStatus_k_EMiniGameStatus_Invalid
}

func (m *CTowerAttack_GameData) GetEvents() []*CTowerAttack_GameData_Event {
	if m != nil {
		return m.Events
	}
	return nil
}

func (m *CTowerAttack_GameData) GetTimestampGameStart() uint32 {
	if m != nil && m.TimestampGameStart != nil {
		return *m.TimestampGameStart
	}
	return 0
}

func (m *CTowerAttack_GameData) GetTimestampLevelStart() uint32 {
	if m != nil && m.TimestampLevelStart != nil {
		return *m.TimestampLevelStart
	}
	return 0
}

func (m *CTowerAttack_GameData) GetUniverseState() string {
	if m != nil && m.UniverseState != nil {
		return *m.UniverseState
	}
	return ""
}

type CTowerAttack_GameData_ActiveAbility struct {
	AccountidCaster  *uint32  `protobuf:"varint,1,opt,name=accountid_caster" json:"accountid_caster,omitempty"`
	Ability          *uint32  `protobuf:"varint,2,opt,name=ability" json:"ability,omitempty"`
	TimestampDone    *uint32  `protobuf:"varint,3,opt,name=timestamp_done" json:"timestamp_done,omitempty"`
	Multiplier       *float64 `protobuf:"fixed64,4,opt,name=multiplier" json:"multiplier,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CTowerAttack_GameData_ActiveAbility) Reset()         { *m = CTowerAttack_GameData_ActiveAbility{} }
func (m *CTowerAttack_GameData_ActiveAbility) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GameData_ActiveAbility) ProtoMessage()    {}

func (m *CTowerAttack_GameData_ActiveAbility) GetAccountidCaster() uint32 {
	if m != nil && m.AccountidCaster != nil {
		return *m.AccountidCaster
	}
	return 0
}

func (m *CTowerAttack_GameData_ActiveAbility) GetAbility() uint32 {
	if m != nil && m.Ability != nil {
		return *m.Ability
	}
	return 0
}

func (m *CTowerAttack_GameData_ActiveAbility) GetTimestampDone() uint32 {
	if m != nil && m.TimestampDone != nil {
		return *m.TimestampDone
	}
	return 0
}

func (m *CTowerAttack_GameData_ActiveAbility) GetMultiplier() float64 {
	if m != nil && m.Multiplier != nil {
		return *m.Multiplier
	}
	return 0
}

type CTowerAttack_GameData_Enemy struct {
	Id               *uint64                `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Type             *ETowerAttackEnemyType `protobuf:"varint,2,opt,name=type,enum=ETowerAttackEnemyType" json:"type,omitempty"`
	Hp               *float64               `protobuf:"fixed64,3,opt,name=hp" json:"hp,omitempty"`
	MaxHp            *float64               `protobuf:"fixed64,4,opt,name=max_hp" json:"max_hp,omitempty"`
	Dps              *float64               `protobuf:"fixed64,5,opt,name=dps" json:"dps,omitempty"`
	Timer            *float64               `protobuf:"fixed64,6,opt,name=timer" json:"timer,omitempty"`
	Gold             *float64               `protobuf:"fixed64,7,opt,name=gold" json:"gold,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CTowerAttack_GameData_Enemy) Reset()         { *m = CTowerAttack_GameData_Enemy{} }
func (m *CTowerAttack_GameData_Enemy) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GameData_Enemy) ProtoMessage()    {}

func (m *CTowerAttack_GameData_Enemy) GetId() uint64 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *CTowerAttack_GameData_Enemy) GetType() ETowerAttackEnemyType {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return ETowerAttackEnemyType_k_ETowerAttackEnemyType_Tower
}

func (m *CTowerAttack_GameData_Enemy) GetHp() float64 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *CTowerAttack_GameData_Enemy) GetMaxHp() float64 {
	if m != nil && m.MaxHp != nil {
		return *m.MaxHp
	}
	return 0
}

func (m *CTowerAttack_GameData_Enemy) GetDps() float64 {
	if m != nil && m.Dps != nil {
		return *m.Dps
	}
	return 0
}

func (m *CTowerAttack_GameData_Enemy) GetTimer() float64 {
	if m != nil && m.Timer != nil {
		return *m.Timer
	}
	return 0
}

func (m *CTowerAttack_GameData_Enemy) GetGold() float64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

type CTowerAttack_GameData_Lane struct {
	Enemies               []*CTowerAttack_GameData_Enemy         `protobuf:"bytes,1,rep,name=enemies" json:"enemies,omitempty"`
	Dps                   *float64                               `protobuf:"fixed64,2,opt,name=dps" json:"dps,omitempty"`
	GoldDropped           *float64                               `protobuf:"fixed64,3,opt,name=gold_dropped" json:"gold_dropped,omitempty"`
	ActivePlayerAbilities []*CTowerAttack_GameData_ActiveAbility `protobuf:"bytes,4,rep,name=active_player_abilities" json:"active_player_abilities,omitempty"`
	PlayerHpBuckets       []uint32                               `protobuf:"varint,5,rep,name=player_hp_buckets" json:"player_hp_buckets,omitempty"`
	Element               *ETowerAttackElement                   `protobuf:"varint,6,opt,name=element,enum=ETowerAttackElement" json:"element,omitempty"`
	// for faster lookup
	ActivePlayerAbilityDecreaseCooldowns *float64 `protobuf:"fixed64,7,opt,name=active_player_ability_decrease_cooldowns,def=1" json:"active_player_ability_decrease_cooldowns,omitempty"`
	ActivePlayerAbilityGoldPerClick      *float64 `protobuf:"fixed64,8,opt,name=active_player_ability_gold_per_click,def=0" json:"active_player_ability_gold_per_click,omitempty"`
	XXX_unrecognized                     []byte   `json:"-"`
}

func (m *CTowerAttack_GameData_Lane) Reset()         { *m = CTowerAttack_GameData_Lane{} }
func (m *CTowerAttack_GameData_Lane) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GameData_Lane) ProtoMessage()    {}

const Default_CTowerAttack_GameData_Lane_ActivePlayerAbilityDecreaseCooldowns float64 = 1
const Default_CTowerAttack_GameData_Lane_ActivePlayerAbilityGoldPerClick float64 = 0

func (m *CTowerAttack_GameData_Lane) GetEnemies() []*CTowerAttack_GameData_Enemy {
	if m != nil {
		return m.Enemies
	}
	return nil
}

func (m *CTowerAttack_GameData_Lane) GetDps() float64 {
	if m != nil && m.Dps != nil {
		return *m.Dps
	}
	return 0
}

func (m *CTowerAttack_GameData_Lane) GetGoldDropped() float64 {
	if m != nil && m.GoldDropped != nil {
		return *m.GoldDropped
	}
	return 0
}

func (m *CTowerAttack_GameData_Lane) GetActivePlayerAbilities() []*CTowerAttack_GameData_ActiveAbility {
	if m != nil {
		return m.ActivePlayerAbilities
	}
	return nil
}

func (m *CTowerAttack_GameData_Lane) GetPlayerHpBuckets() []uint32 {
	if m != nil {
		return m.PlayerHpBuckets
	}
	return nil
}

func (m *CTowerAttack_GameData_Lane) GetElement() ETowerAttackElement {
	if m != nil && m.Element != nil {
		return *m.Element
	}
	return ETowerAttackElement_k_ETowerAttackElement_Invalid
}

func (m *CTowerAttack_GameData_Lane) GetActivePlayerAbilityDecreaseCooldowns() float64 {
	if m != nil && m.ActivePlayerAbilityDecreaseCooldowns != nil {
		return *m.ActivePlayerAbilityDecreaseCooldowns
	}
	return Default_CTowerAttack_GameData_Lane_ActivePlayerAbilityDecreaseCooldowns
}

func (m *CTowerAttack_GameData_Lane) GetActivePlayerAbilityGoldPerClick() float64 {
	if m != nil && m.ActivePlayerAbilityGoldPerClick != nil {
		return *m.ActivePlayerAbilityGoldPerClick
	}
	return Default_CTowerAttack_GameData_Lane_ActivePlayerAbilityGoldPerClick
}

type CTowerAttack_GameData_Event struct {
	Event            *ETowerAttackEvent `protobuf:"varint,1,opt,name=event,enum=ETowerAttackEvent" json:"event,omitempty"`
	TimeStart        *uint32            `protobuf:"varint,2,opt,name=time_start" json:"time_start,omitempty"`
	TimeEnd          *uint32            `protobuf:"varint,3,opt,name=time_end" json:"time_end,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CTowerAttack_GameData_Event) Reset()         { *m = CTowerAttack_GameData_Event{} }
func (m *CTowerAttack_GameData_Event) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GameData_Event) ProtoMessage()    {}

func (m *CTowerAttack_GameData_Event) GetEvent() ETowerAttackEvent {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ETowerAttackEvent_k_ETowerAttackEvent_Invalid
}

func (m *CTowerAttack_GameData_Event) GetTimeStart() uint32 {
	if m != nil && m.TimeStart != nil {
		return *m.TimeStart
	}
	return 0
}

func (m *CTowerAttack_GameData_Event) GetTimeEnd() uint32 {
	if m != nil && m.TimeEnd != nil {
		return *m.TimeEnd
	}
	return 0
}

type CTowerAttack_Stats struct {
	NumPlayers                       *uint32  `protobuf:"varint,1,opt,name=num_players" json:"num_players,omitempty"`
	NumMobsKilled                    *uint64  `protobuf:"varint,2,opt,name=num_mobs_killed" json:"num_mobs_killed,omitempty"`
	NumTowersKilled                  *uint64  `protobuf:"varint,3,opt,name=num_towers_killed" json:"num_towers_killed,omitempty"`
	NumMinibossesKilled              *uint64  `protobuf:"varint,4,opt,name=num_minibosses_killed" json:"num_minibosses_killed,omitempty"`
	NumBossesKilled                  *uint64  `protobuf:"varint,5,opt,name=num_bosses_killed" json:"num_bosses_killed,omitempty"`
	NumClicks                        *uint64  `protobuf:"varint,6,opt,name=num_clicks" json:"num_clicks,omitempty"`
	NumAbilitiesActivated            *uint64  `protobuf:"varint,7,opt,name=num_abilities_activated" json:"num_abilities_activated,omitempty"`
	NumPlayersReachingMilestoneLevel *uint64  `protobuf:"varint,8,opt,name=num_players_reaching_milestone_level" json:"num_players_reaching_milestone_level,omitempty"`
	NumAbilityItemsActivated         *uint64  `protobuf:"varint,9,opt,name=num_ability_items_activated" json:"num_ability_items_activated,omitempty"`
	NumActivePlayers                 *uint32  `protobuf:"varint,10,opt,name=num_active_players" json:"num_active_players,omitempty"`
	TimeSimulating                   *float64 `protobuf:"fixed64,11,opt,name=time_simulating" json:"time_simulating,omitempty"`
	TimeSaving                       *float64 `protobuf:"fixed64,12,opt,name=time_saving" json:"time_saving,omitempty"`
	XXX_unrecognized                 []byte   `json:"-"`
}

func (m *CTowerAttack_Stats) Reset()         { *m = CTowerAttack_Stats{} }
func (m *CTowerAttack_Stats) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_Stats) ProtoMessage()    {}

func (m *CTowerAttack_Stats) GetNumPlayers() uint32 {
	if m != nil && m.NumPlayers != nil {
		return *m.NumPlayers
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumMobsKilled() uint64 {
	if m != nil && m.NumMobsKilled != nil {
		return *m.NumMobsKilled
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumTowersKilled() uint64 {
	if m != nil && m.NumTowersKilled != nil {
		return *m.NumTowersKilled
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumMinibossesKilled() uint64 {
	if m != nil && m.NumMinibossesKilled != nil {
		return *m.NumMinibossesKilled
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumBossesKilled() uint64 {
	if m != nil && m.NumBossesKilled != nil {
		return *m.NumBossesKilled
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumClicks() uint64 {
	if m != nil && m.NumClicks != nil {
		return *m.NumClicks
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumAbilitiesActivated() uint64 {
	if m != nil && m.NumAbilitiesActivated != nil {
		return *m.NumAbilitiesActivated
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumPlayersReachingMilestoneLevel() uint64 {
	if m != nil && m.NumPlayersReachingMilestoneLevel != nil {
		return *m.NumPlayersReachingMilestoneLevel
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumAbilityItemsActivated() uint64 {
	if m != nil && m.NumAbilityItemsActivated != nil {
		return *m.NumAbilityItemsActivated
	}
	return 0
}

func (m *CTowerAttack_Stats) GetNumActivePlayers() uint32 {
	if m != nil && m.NumActivePlayers != nil {
		return *m.NumActivePlayers
	}
	return 0
}

func (m *CTowerAttack_Stats) GetTimeSimulating() float64 {
	if m != nil && m.TimeSimulating != nil {
		return *m.TimeSimulating
	}
	return 0
}

func (m *CTowerAttack_Stats) GetTimeSaving() float64 {
	if m != nil && m.TimeSaving != nil {
		return *m.TimeSaving
	}
	return 0
}

// player related
type CTowerAttack_PlayerData struct {
	Hp                      *float64                                 `protobuf:"fixed64,1,opt,name=hp" json:"hp,omitempty"`
	CurrentLane             *uint32                                  `protobuf:"varint,2,opt,name=current_lane" json:"current_lane,omitempty"`
	Target                  *uint32                                  `protobuf:"varint,3,opt,name=target" json:"target,omitempty"`
	TimeDied                *uint32                                  `protobuf:"varint,4,opt,name=time_died" json:"time_died,omitempty"`
	Gold                    *float64                                 `protobuf:"fixed64,5,opt,name=gold" json:"gold,omitempty"`
	ActiveAbilitiesBitfield *uint64                                  `protobuf:"varint,6,opt,name=active_abilities_bitfield" json:"active_abilities_bitfield,omitempty"`
	ActiveAbilities         []*CTowerAttack_PlayerData_ActiveAbility `protobuf:"bytes,7,rep,name=active_abilities" json:"active_abilities,omitempty"`
	CritDamage              *float64                                 `protobuf:"fixed64,8,opt,name=crit_damage" json:"crit_damage,omitempty"`
	Loot                    []*CTowerAttack_PlayerData_Loot          `protobuf:"bytes,9,rep,name=loot" json:"loot,omitempty"`
	XXX_unrecognized        []byte                                   `json:"-"`
}

func (m *CTowerAttack_PlayerData) Reset()         { *m = CTowerAttack_PlayerData{} }
func (m *CTowerAttack_PlayerData) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_PlayerData) ProtoMessage()    {}

func (m *CTowerAttack_PlayerData) GetHp() float64 {
	if m != nil && m.Hp != nil {
		return *m.Hp
	}
	return 0
}

func (m *CTowerAttack_PlayerData) GetCurrentLane() uint32 {
	if m != nil && m.CurrentLane != nil {
		return *m.CurrentLane
	}
	return 0
}

func (m *CTowerAttack_PlayerData) GetTarget() uint32 {
	if m != nil && m.Target != nil {
		return *m.Target
	}
	return 0
}

func (m *CTowerAttack_PlayerData) GetTimeDied() uint32 {
	if m != nil && m.TimeDied != nil {
		return *m.TimeDied
	}
	return 0
}

func (m *CTowerAttack_PlayerData) GetGold() float64 {
	if m != nil && m.Gold != nil {
		return *m.Gold
	}
	return 0
}

func (m *CTowerAttack_PlayerData) GetActiveAbilitiesBitfield() uint64 {
	if m != nil && m.ActiveAbilitiesBitfield != nil {
		return *m.ActiveAbilitiesBitfield
	}
	return 0
}

func (m *CTowerAttack_PlayerData) GetActiveAbilities() []*CTowerAttack_PlayerData_ActiveAbility {
	if m != nil {
		return m.ActiveAbilities
	}
	return nil
}

func (m *CTowerAttack_PlayerData) GetCritDamage() float64 {
	if m != nil && m.CritDamage != nil {
		return *m.CritDamage
	}
	return 0
}

func (m *CTowerAttack_PlayerData) GetLoot() []*CTowerAttack_PlayerData_Loot {
	if m != nil {
		return m.Loot
	}
	return nil
}

type CTowerAttack_PlayerData_ActiveAbility struct {
	Ability           *uint32 `protobuf:"varint,1,opt,name=ability" json:"ability,omitempty"`
	TimestampDone     *uint32 `protobuf:"varint,2,opt,name=timestamp_done" json:"timestamp_done,omitempty"`
	TimestampCooldown *uint32 `protobuf:"varint,3,opt,name=timestamp_cooldown" json:"timestamp_cooldown,omitempty"`
	XXX_unrecognized  []byte  `json:"-"`
}

func (m *CTowerAttack_PlayerData_ActiveAbility) Reset()         { *m = CTowerAttack_PlayerData_ActiveAbility{} }
func (m *CTowerAttack_PlayerData_ActiveAbility) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_PlayerData_ActiveAbility) ProtoMessage()    {}

func (m *CTowerAttack_PlayerData_ActiveAbility) GetAbility() uint32 {
	if m != nil && m.Ability != nil {
		return *m.Ability
	}
	return 0
}

func (m *CTowerAttack_PlayerData_ActiveAbility) GetTimestampDone() uint32 {
	if m != nil && m.TimestampDone != nil {
		return *m.TimestampDone
	}
	return 0
}

func (m *CTowerAttack_PlayerData_ActiveAbility) GetTimestampCooldown() uint32 {
	if m != nil && m.TimestampCooldown != nil {
		return *m.TimestampCooldown
	}
	return 0
}

type CTowerAttack_PlayerData_Loot struct {
	Ability          *ETowerAttackAbility `protobuf:"varint,1,opt,name=ability,enum=ETowerAttackAbility" json:"ability,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CTowerAttack_PlayerData_Loot) Reset()         { *m = CTowerAttack_PlayerData_Loot{} }
func (m *CTowerAttack_PlayerData_Loot) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_PlayerData_Loot) ProtoMessage()    {}

func (m *CTowerAttack_PlayerData_Loot) GetAbility() ETowerAttackAbility {
	if m != nil && m.Ability != nil {
		return *m.Ability
	}
	return ETowerAttackAbility_k_ETowerAttackAbility_Invalid
}

type CTowerAttack_PlayerTechTree struct {
	Upgrades                  []*CTowerAttack_PlayerTechTree_Upgrade     `protobuf:"bytes,1,rep,name=upgrades" json:"upgrades,omitempty"`
	DamagePerClick            *float64                                   `protobuf:"fixed64,2,opt,name=damage_per_click,def=1" json:"damage_per_click,omitempty"`
	DamageMultiplierFire      *float64                                   `protobuf:"fixed64,3,opt,name=damage_multiplier_fire,def=1" json:"damage_multiplier_fire,omitempty"`
	DamageMultiplierWater     *float64                                   `protobuf:"fixed64,4,opt,name=damage_multiplier_water,def=1" json:"damage_multiplier_water,omitempty"`
	DamageMultiplierAir       *float64                                   `protobuf:"fixed64,5,opt,name=damage_multiplier_air,def=1" json:"damage_multiplier_air,omitempty"`
	DamageMultiplierEarth     *float64                                   `protobuf:"fixed64,6,opt,name=damage_multiplier_earth,def=1" json:"damage_multiplier_earth,omitempty"`
	DamageMultiplierCrit      *float64                                   `protobuf:"fixed64,7,opt,name=damage_multiplier_crit,def=2" json:"damage_multiplier_crit,omitempty"`
	UnlockedAbilitiesBitfield *uint64                                    `protobuf:"varint,8,opt,name=unlocked_abilities_bitfield,def=0" json:"unlocked_abilities_bitfield,omitempty"`
	HpMultiplier              *float64                                   `protobuf:"fixed64,9,opt,name=hp_multiplier,def=1" json:"hp_multiplier,omitempty"`
	CritPercentage            *float64                                   `protobuf:"fixed64,10,opt,name=crit_percentage,def=0" json:"crit_percentage,omitempty"`
	BadgePoints               *float64                                   `protobuf:"fixed64,11,opt,name=badge_points" json:"badge_points,omitempty"`
	AbilityItems              []*CTowerAttack_PlayerTechTree_AbilityItem `protobuf:"bytes,12,rep,name=ability_items" json:"ability_items,omitempty"`
	BossLootDropPercentage    *float64                                   `protobuf:"fixed64,13,opt,name=boss_loot_drop_percentage,def=0.25" json:"boss_loot_drop_percentage,omitempty"`
	DamageMultiplierDps       *float64                                   `protobuf:"fixed64,14,opt,name=damage_multiplier_dps,def=1" json:"damage_multiplier_dps,omitempty"`
	BaseDps                   *float64                                   `protobuf:"fixed64,15,opt,name=base_dps" json:"base_dps,omitempty"`
	DamagePerClickMultiplier  *float64                                   `protobuf:"fixed64,16,opt,name=damage_per_click_multiplier,def=1" json:"damage_per_click_multiplier,omitempty"`
	MaxHp                     *float64                                   `protobuf:"fixed64,17,opt,name=max_hp" json:"max_hp,omitempty"`
	Dps                       *float64                                   `protobuf:"fixed64,18,opt,name=dps" json:"dps,omitempty"`
	XXX_unrecognized          []byte                                     `json:"-"`
}

func (m *CTowerAttack_PlayerTechTree) Reset()         { *m = CTowerAttack_PlayerTechTree{} }
func (m *CTowerAttack_PlayerTechTree) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_PlayerTechTree) ProtoMessage()    {}

const Default_CTowerAttack_PlayerTechTree_DamagePerClick float64 = 1
const Default_CTowerAttack_PlayerTechTree_DamageMultiplierFire float64 = 1
const Default_CTowerAttack_PlayerTechTree_DamageMultiplierWater float64 = 1
const Default_CTowerAttack_PlayerTechTree_DamageMultiplierAir float64 = 1
const Default_CTowerAttack_PlayerTechTree_DamageMultiplierEarth float64 = 1
const Default_CTowerAttack_PlayerTechTree_DamageMultiplierCrit float64 = 2
const Default_CTowerAttack_PlayerTechTree_UnlockedAbilitiesBitfield uint64 = 0
const Default_CTowerAttack_PlayerTechTree_HpMultiplier float64 = 1
const Default_CTowerAttack_PlayerTechTree_CritPercentage float64 = 0
const Default_CTowerAttack_PlayerTechTree_BossLootDropPercentage float64 = 0.25
const Default_CTowerAttack_PlayerTechTree_DamageMultiplierDps float64 = 1
const Default_CTowerAttack_PlayerTechTree_DamagePerClickMultiplier float64 = 1

func (m *CTowerAttack_PlayerTechTree) GetUpgrades() []*CTowerAttack_PlayerTechTree_Upgrade {
	if m != nil {
		return m.Upgrades
	}
	return nil
}

func (m *CTowerAttack_PlayerTechTree) GetDamagePerClick() float64 {
	if m != nil && m.DamagePerClick != nil {
		return *m.DamagePerClick
	}
	return Default_CTowerAttack_PlayerTechTree_DamagePerClick
}

func (m *CTowerAttack_PlayerTechTree) GetDamageMultiplierFire() float64 {
	if m != nil && m.DamageMultiplierFire != nil {
		return *m.DamageMultiplierFire
	}
	return Default_CTowerAttack_PlayerTechTree_DamageMultiplierFire
}

func (m *CTowerAttack_PlayerTechTree) GetDamageMultiplierWater() float64 {
	if m != nil && m.DamageMultiplierWater != nil {
		return *m.DamageMultiplierWater
	}
	return Default_CTowerAttack_PlayerTechTree_DamageMultiplierWater
}

func (m *CTowerAttack_PlayerTechTree) GetDamageMultiplierAir() float64 {
	if m != nil && m.DamageMultiplierAir != nil {
		return *m.DamageMultiplierAir
	}
	return Default_CTowerAttack_PlayerTechTree_DamageMultiplierAir
}

func (m *CTowerAttack_PlayerTechTree) GetDamageMultiplierEarth() float64 {
	if m != nil && m.DamageMultiplierEarth != nil {
		return *m.DamageMultiplierEarth
	}
	return Default_CTowerAttack_PlayerTechTree_DamageMultiplierEarth
}

func (m *CTowerAttack_PlayerTechTree) GetDamageMultiplierCrit() float64 {
	if m != nil && m.DamageMultiplierCrit != nil {
		return *m.DamageMultiplierCrit
	}
	return Default_CTowerAttack_PlayerTechTree_DamageMultiplierCrit
}

func (m *CTowerAttack_PlayerTechTree) GetUnlockedAbilitiesBitfield() uint64 {
	if m != nil && m.UnlockedAbilitiesBitfield != nil {
		return *m.UnlockedAbilitiesBitfield
	}
	return Default_CTowerAttack_PlayerTechTree_UnlockedAbilitiesBitfield
}

func (m *CTowerAttack_PlayerTechTree) GetHpMultiplier() float64 {
	if m != nil && m.HpMultiplier != nil {
		return *m.HpMultiplier
	}
	return Default_CTowerAttack_PlayerTechTree_HpMultiplier
}

func (m *CTowerAttack_PlayerTechTree) GetCritPercentage() float64 {
	if m != nil && m.CritPercentage != nil {
		return *m.CritPercentage
	}
	return Default_CTowerAttack_PlayerTechTree_CritPercentage
}

func (m *CTowerAttack_PlayerTechTree) GetBadgePoints() float64 {
	if m != nil && m.BadgePoints != nil {
		return *m.BadgePoints
	}
	return 0
}

func (m *CTowerAttack_PlayerTechTree) GetAbilityItems() []*CTowerAttack_PlayerTechTree_AbilityItem {
	if m != nil {
		return m.AbilityItems
	}
	return nil
}

func (m *CTowerAttack_PlayerTechTree) GetBossLootDropPercentage() float64 {
	if m != nil && m.BossLootDropPercentage != nil {
		return *m.BossLootDropPercentage
	}
	return Default_CTowerAttack_PlayerTechTree_BossLootDropPercentage
}

func (m *CTowerAttack_PlayerTechTree) GetDamageMultiplierDps() float64 {
	if m != nil && m.DamageMultiplierDps != nil {
		return *m.DamageMultiplierDps
	}
	return Default_CTowerAttack_PlayerTechTree_DamageMultiplierDps
}

func (m *CTowerAttack_PlayerTechTree) GetBaseDps() float64 {
	if m != nil && m.BaseDps != nil {
		return *m.BaseDps
	}
	return 0
}

func (m *CTowerAttack_PlayerTechTree) GetDamagePerClickMultiplier() float64 {
	if m != nil && m.DamagePerClickMultiplier != nil {
		return *m.DamagePerClickMultiplier
	}
	return Default_CTowerAttack_PlayerTechTree_DamagePerClickMultiplier
}

func (m *CTowerAttack_PlayerTechTree) GetMaxHp() float64 {
	if m != nil && m.MaxHp != nil {
		return *m.MaxHp
	}
	return 0
}

func (m *CTowerAttack_PlayerTechTree) GetDps() float64 {
	if m != nil && m.Dps != nil {
		return *m.Dps
	}
	return 0
}

type CTowerAttack_PlayerTechTree_Upgrade struct {
	Upgrade          *uint32  `protobuf:"varint,1,opt,name=upgrade" json:"upgrade,omitempty"`
	Level            *uint32  `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	CostForNextLevel *float64 `protobuf:"fixed64,3,opt,name=cost_for_next_level" json:"cost_for_next_level,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CTowerAttack_PlayerTechTree_Upgrade) Reset()         { *m = CTowerAttack_PlayerTechTree_Upgrade{} }
func (m *CTowerAttack_PlayerTechTree_Upgrade) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_PlayerTechTree_Upgrade) ProtoMessage()    {}

func (m *CTowerAttack_PlayerTechTree_Upgrade) GetUpgrade() uint32 {
	if m != nil && m.Upgrade != nil {
		return *m.Upgrade
	}
	return 0
}

func (m *CTowerAttack_PlayerTechTree_Upgrade) GetLevel() uint32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *CTowerAttack_PlayerTechTree_Upgrade) GetCostForNextLevel() float64 {
	if m != nil && m.CostForNextLevel != nil {
		return *m.CostForNextLevel
	}
	return 0
}

type CTowerAttack_PlayerTechTree_AbilityItem struct {
	Ability          *ETowerAttackAbility `protobuf:"varint,1,opt,name=ability,enum=ETowerAttackAbility" json:"ability,omitempty"`
	Quantity         *uint32              `protobuf:"varint,2,opt,name=quantity" json:"quantity,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CTowerAttack_PlayerTechTree_AbilityItem) Reset() {
	*m = CTowerAttack_PlayerTechTree_AbilityItem{}
}
func (m *CTowerAttack_PlayerTechTree_AbilityItem) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_PlayerTechTree_AbilityItem) ProtoMessage()    {}

func (m *CTowerAttack_PlayerTechTree_AbilityItem) GetAbility() ETowerAttackAbility {
	if m != nil && m.Ability != nil {
		return *m.Ability
	}
	return ETowerAttackAbility_k_ETowerAttackAbility_Invalid
}

func (m *CTowerAttack_PlayerTechTree_AbilityItem) GetQuantity() uint32 {
	if m != nil && m.Quantity != nil {
		return *m.Quantity
	}
	return 0
}

type CTowerAttack_GetGameData_Request struct {
	Gameid           *uint64 `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	IncludeStats     *bool   `protobuf:"varint,2,opt,name=include_stats" json:"include_stats,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTowerAttack_GetGameData_Request) Reset()         { *m = CTowerAttack_GetGameData_Request{} }
func (m *CTowerAttack_GetGameData_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetGameData_Request) ProtoMessage()    {}

func (m *CTowerAttack_GetGameData_Request) GetGameid() uint64 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

func (m *CTowerAttack_GetGameData_Request) GetIncludeStats() bool {
	if m != nil && m.IncludeStats != nil {
		return *m.IncludeStats
	}
	return false
}

type CTowerAttack_GetGameData_Response struct {
	GameData         *CTowerAttack_GameData `protobuf:"bytes,1,opt,name=game_data" json:"game_data,omitempty"`
	Stats            *CTowerAttack_Stats    `protobuf:"bytes,2,opt,name=stats" json:"stats,omitempty"`
	XXX_unrecognized []byte                 `json:"-"`
}

func (m *CTowerAttack_GetGameData_Response) Reset()         { *m = CTowerAttack_GetGameData_Response{} }
func (m *CTowerAttack_GetGameData_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetGameData_Response) ProtoMessage()    {}

func (m *CTowerAttack_GetGameData_Response) GetGameData() *CTowerAttack_GameData {
	if m != nil {
		return m.GameData
	}
	return nil
}

func (m *CTowerAttack_GetGameData_Response) GetStats() *CTowerAttack_Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CTowerAttack_GetPlayerNames_Request struct {
	Gameid           *uint64  `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	Accountids       []uint32 `protobuf:"varint,2,rep,name=accountids" json:"accountids,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CTowerAttack_GetPlayerNames_Request) Reset()         { *m = CTowerAttack_GetPlayerNames_Request{} }
func (m *CTowerAttack_GetPlayerNames_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetPlayerNames_Request) ProtoMessage()    {}

func (m *CTowerAttack_GetPlayerNames_Request) GetGameid() uint64 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

func (m *CTowerAttack_GetPlayerNames_Request) GetAccountids() []uint32 {
	if m != nil {
		return m.Accountids
	}
	return nil
}

type CTowerAttack_GetPlayerNames_Response struct {
	Names            []*CTowerAttack_GetPlayerNames_Response_PlayerName `protobuf:"bytes,1,rep,name=names" json:"names,omitempty"`
	XXX_unrecognized []byte                                             `json:"-"`
}

func (m *CTowerAttack_GetPlayerNames_Response) Reset()         { *m = CTowerAttack_GetPlayerNames_Response{} }
func (m *CTowerAttack_GetPlayerNames_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetPlayerNames_Response) ProtoMessage()    {}

func (m *CTowerAttack_GetPlayerNames_Response) GetNames() []*CTowerAttack_GetPlayerNames_Response_PlayerName {
	if m != nil {
		return m.Names
	}
	return nil
}

type CTowerAttack_GetPlayerNames_Response_PlayerName struct {
	Accountid        *uint32 `protobuf:"varint,1,opt,name=accountid" json:"accountid,omitempty"`
	Name             *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTowerAttack_GetPlayerNames_Response_PlayerName) Reset() {
	*m = CTowerAttack_GetPlayerNames_Response_PlayerName{}
}
func (m *CTowerAttack_GetPlayerNames_Response_PlayerName) String() string {
	return proto.CompactTextString(m)
}
func (*CTowerAttack_GetPlayerNames_Response_PlayerName) ProtoMessage() {}

func (m *CTowerAttack_GetPlayerNames_Response_PlayerName) GetAccountid() uint32 {
	if m != nil && m.Accountid != nil {
		return *m.Accountid
	}
	return 0
}

func (m *CTowerAttack_GetPlayerNames_Response_PlayerName) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

type CTowerAttack_GetPlayerData_Request struct {
	Gameid           *uint64 `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	IncludeTechTree  *bool   `protobuf:"varint,2,opt,name=include_tech_tree,def=0" json:"include_tech_tree,omitempty"`
	Steamid          *uint64 `protobuf:"varint,3,opt,name=steamid" json:"steamid,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTowerAttack_GetPlayerData_Request) Reset()         { *m = CTowerAttack_GetPlayerData_Request{} }
func (m *CTowerAttack_GetPlayerData_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetPlayerData_Request) ProtoMessage()    {}

const Default_CTowerAttack_GetPlayerData_Request_IncludeTechTree bool = false

func (m *CTowerAttack_GetPlayerData_Request) GetGameid() uint64 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

func (m *CTowerAttack_GetPlayerData_Request) GetIncludeTechTree() bool {
	if m != nil && m.IncludeTechTree != nil {
		return *m.IncludeTechTree
	}
	return Default_CTowerAttack_GetPlayerData_Request_IncludeTechTree
}

func (m *CTowerAttack_GetPlayerData_Request) GetSteamid() uint64 {
	if m != nil && m.Steamid != nil {
		return *m.Steamid
	}
	return 0
}

type CTowerAttack_GetPlayerData_Response struct {
	PlayerData       *CTowerAttack_PlayerData     `protobuf:"bytes,1,opt,name=player_data" json:"player_data,omitempty"`
	TechTree         *CTowerAttack_PlayerTechTree `protobuf:"bytes,2,opt,name=tech_tree" json:"tech_tree,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CTowerAttack_GetPlayerData_Response) Reset()         { *m = CTowerAttack_GetPlayerData_Response{} }
func (m *CTowerAttack_GetPlayerData_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetPlayerData_Response) ProtoMessage()    {}

func (m *CTowerAttack_GetPlayerData_Response) GetPlayerData() *CTowerAttack_PlayerData {
	if m != nil {
		return m.PlayerData
	}
	return nil
}

func (m *CTowerAttack_GetPlayerData_Response) GetTechTree() *CTowerAttack_PlayerTechTree {
	if m != nil {
		return m.TechTree
	}
	return nil
}

type CTowerAttack_UseAbilities_Request struct {
	Gameid             *uint64                                             `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	RequestedAbilities []*CTowerAttack_UseAbilities_Request_UseAbilityData `protobuf:"bytes,2,rep,name=requested_abilities" json:"requested_abilities,omitempty"`
	XXX_unrecognized   []byte                                              `json:"-"`
}

func (m *CTowerAttack_UseAbilities_Request) Reset()         { *m = CTowerAttack_UseAbilities_Request{} }
func (m *CTowerAttack_UseAbilities_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_UseAbilities_Request) ProtoMessage()    {}

func (m *CTowerAttack_UseAbilities_Request) GetGameid() uint64 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

func (m *CTowerAttack_UseAbilities_Request) GetRequestedAbilities() []*CTowerAttack_UseAbilities_Request_UseAbilityData {
	if m != nil {
		return m.RequestedAbilities
	}
	return nil
}

type CTowerAttack_UseAbilities_Request_UseAbilityData struct {
	Ability          *ETowerAttackAbility `protobuf:"varint,1,opt,name=ability,enum=ETowerAttackAbility" json:"ability,omitempty"`
	NewLane          *uint32              `protobuf:"varint,2,opt,name=new_lane" json:"new_lane,omitempty"`
	NewTarget        *uint32              `protobuf:"varint,3,opt,name=new_target" json:"new_target,omitempty"`
	NumClicks        *uint32              `protobuf:"varint,4,opt,name=num_clicks" json:"num_clicks,omitempty"`
	XXX_unrecognized []byte               `json:"-"`
}

func (m *CTowerAttack_UseAbilities_Request_UseAbilityData) Reset() {
	*m = CTowerAttack_UseAbilities_Request_UseAbilityData{}
}
func (m *CTowerAttack_UseAbilities_Request_UseAbilityData) String() string {
	return proto.CompactTextString(m)
}
func (*CTowerAttack_UseAbilities_Request_UseAbilityData) ProtoMessage() {}

func (m *CTowerAttack_UseAbilities_Request_UseAbilityData) GetAbility() ETowerAttackAbility {
	if m != nil && m.Ability != nil {
		return *m.Ability
	}
	return ETowerAttackAbility_k_ETowerAttackAbility_Invalid
}

func (m *CTowerAttack_UseAbilities_Request_UseAbilityData) GetNewLane() uint32 {
	if m != nil && m.NewLane != nil {
		return *m.NewLane
	}
	return 0
}

func (m *CTowerAttack_UseAbilities_Request_UseAbilityData) GetNewTarget() uint32 {
	if m != nil && m.NewTarget != nil {
		return *m.NewTarget
	}
	return 0
}

func (m *CTowerAttack_UseAbilities_Request_UseAbilityData) GetNumClicks() uint32 {
	if m != nil && m.NumClicks != nil {
		return *m.NumClicks
	}
	return 0
}

type CTowerAttack_UseAbilities_Response struct {
	PlayerData       *CTowerAttack_PlayerData     `protobuf:"bytes,1,opt,name=player_data" json:"player_data,omitempty"`
	TechTree         *CTowerAttack_PlayerTechTree `protobuf:"bytes,2,opt,name=tech_tree" json:"tech_tree,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CTowerAttack_UseAbilities_Response) Reset()         { *m = CTowerAttack_UseAbilities_Response{} }
func (m *CTowerAttack_UseAbilities_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_UseAbilities_Response) ProtoMessage()    {}

func (m *CTowerAttack_UseAbilities_Response) GetPlayerData() *CTowerAttack_PlayerData {
	if m != nil {
		return m.PlayerData
	}
	return nil
}

func (m *CTowerAttack_UseAbilities_Response) GetTechTree() *CTowerAttack_PlayerTechTree {
	if m != nil {
		return m.TechTree
	}
	return nil
}

type CTowerAttack_ChooseUpgrade_Request struct {
	Gameid           *uint64  `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	Upgrades         []uint32 `protobuf:"varint,2,rep,name=upgrades" json:"upgrades,omitempty"`
	XXX_unrecognized []byte   `json:"-"`
}

func (m *CTowerAttack_ChooseUpgrade_Request) Reset()         { *m = CTowerAttack_ChooseUpgrade_Request{} }
func (m *CTowerAttack_ChooseUpgrade_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_ChooseUpgrade_Request) ProtoMessage()    {}

func (m *CTowerAttack_ChooseUpgrade_Request) GetGameid() uint64 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

func (m *CTowerAttack_ChooseUpgrade_Request) GetUpgrades() []uint32 {
	if m != nil {
		return m.Upgrades
	}
	return nil
}

type CTowerAttack_ChooseUpgrade_Response struct {
	TechTree         *CTowerAttack_PlayerTechTree `protobuf:"bytes,1,opt,name=tech_tree" json:"tech_tree,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CTowerAttack_ChooseUpgrade_Response) Reset()         { *m = CTowerAttack_ChooseUpgrade_Response{} }
func (m *CTowerAttack_ChooseUpgrade_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_ChooseUpgrade_Response) ProtoMessage()    {}

func (m *CTowerAttack_ChooseUpgrade_Response) GetTechTree() *CTowerAttack_PlayerTechTree {
	if m != nil {
		return m.TechTree
	}
	return nil
}

type CTowerAttack_GetTuningData_Request struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CTowerAttack_GetTuningData_Request) Reset()         { *m = CTowerAttack_GetTuningData_Request{} }
func (m *CTowerAttack_GetTuningData_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetTuningData_Request) ProtoMessage()    {}

type CTowerAttack_GetTuningData_Response struct {
	Json             *string `protobuf:"bytes,1,opt,name=json" json:"json,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTowerAttack_GetTuningData_Response) Reset()         { *m = CTowerAttack_GetTuningData_Response{} }
func (m *CTowerAttack_GetTuningData_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetTuningData_Response) ProtoMessage()    {}

func (m *CTowerAttack_GetTuningData_Response) GetJson() string {
	if m != nil && m.Json != nil {
		return *m.Json
	}
	return ""
}

type CTowerAttack_GetDailyStatsRollup_Request struct {
	Timestamp        *uint32 `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *CTowerAttack_GetDailyStatsRollup_Request) Reset() {
	*m = CTowerAttack_GetDailyStatsRollup_Request{}
}
func (m *CTowerAttack_GetDailyStatsRollup_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetDailyStatsRollup_Request) ProtoMessage()    {}

func (m *CTowerAttack_GetDailyStatsRollup_Request) GetTimestamp() uint32 {
	if m != nil && m.Timestamp != nil {
		return *m.Timestamp
	}
	return 0
}

type CTowerAttack_GetDailyStatsRollup_Response struct {
	Stats            *CTowerAttack_Stats `protobuf:"bytes,1,opt,name=stats" json:"stats,omitempty"`
	XXX_unrecognized []byte              `json:"-"`
}

func (m *CTowerAttack_GetDailyStatsRollup_Response) Reset() {
	*m = CTowerAttack_GetDailyStatsRollup_Response{}
}
func (m *CTowerAttack_GetDailyStatsRollup_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_GetDailyStatsRollup_Response) ProtoMessage()    {}

func (m *CTowerAttack_GetDailyStatsRollup_Response) GetStats() *CTowerAttack_Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

type CTowerAttack_HandleGameEvent_Request struct {
	Gameid           *uint64            `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	Event            *ETowerAttackEvent `protobuf:"varint,2,opt,name=event,enum=ETowerAttackEvent" json:"event,omitempty"`
	XXX_unrecognized []byte             `json:"-"`
}

func (m *CTowerAttack_HandleGameEvent_Request) Reset()         { *m = CTowerAttack_HandleGameEvent_Request{} }
func (m *CTowerAttack_HandleGameEvent_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_HandleGameEvent_Request) ProtoMessage()    {}

func (m *CTowerAttack_HandleGameEvent_Request) GetGameid() uint64 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

func (m *CTowerAttack_HandleGameEvent_Request) GetEvent() ETowerAttackEvent {
	if m != nil && m.Event != nil {
		return *m.Event
	}
	return ETowerAttackEvent_k_ETowerAttackEvent_Invalid
}

type CTowerAttack_HandleGameEvent_Response struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *CTowerAttack_HandleGameEvent_Response) Reset()         { *m = CTowerAttack_HandleGameEvent_Response{} }
func (m *CTowerAttack_HandleGameEvent_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_HandleGameEvent_Response) ProtoMessage()    {}

type CTowerAttack_UseBadgePoints_Request struct {
	Gameid           *uint64               `protobuf:"varint,1,opt,name=gameid" json:"gameid,omitempty"`
	AbilityItems     []ETowerAttackAbility `protobuf:"varint,2,rep,name=ability_items,enum=ETowerAttackAbility" json:"ability_items,omitempty"`
	XXX_unrecognized []byte                `json:"-"`
}

func (m *CTowerAttack_UseBadgePoints_Request) Reset()         { *m = CTowerAttack_UseBadgePoints_Request{} }
func (m *CTowerAttack_UseBadgePoints_Request) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_UseBadgePoints_Request) ProtoMessage()    {}

func (m *CTowerAttack_UseBadgePoints_Request) GetGameid() uint64 {
	if m != nil && m.Gameid != nil {
		return *m.Gameid
	}
	return 0
}

func (m *CTowerAttack_UseBadgePoints_Request) GetAbilityItems() []ETowerAttackAbility {
	if m != nil {
		return m.AbilityItems
	}
	return nil
}

type CTowerAttack_UseBadgePoints_Response struct {
	TechTree         *CTowerAttack_PlayerTechTree `protobuf:"bytes,1,opt,name=tech_tree" json:"tech_tree,omitempty"`
	XXX_unrecognized []byte                       `json:"-"`
}

func (m *CTowerAttack_UseBadgePoints_Response) Reset()         { *m = CTowerAttack_UseBadgePoints_Response{} }
func (m *CTowerAttack_UseBadgePoints_Response) String() string { return proto.CompactTextString(m) }
func (*CTowerAttack_UseBadgePoints_Response) ProtoMessage()    {}

func (m *CTowerAttack_UseBadgePoints_Response) GetTechTree() *CTowerAttack_PlayerTechTree {
	if m != nil {
		return m.TechTree
	}
	return nil
}

func init() {
	proto.RegisterEnum("EMiniGameType", EMiniGameType_name, EMiniGameType_value)
	proto.RegisterEnum("EMiniGameStatus", EMiniGameStatus_name, EMiniGameStatus_value)
	proto.RegisterEnum("ETowerAttackElement", ETowerAttackElement_name, ETowerAttackElement_value)
	proto.RegisterEnum("ETowerAttackAbility", ETowerAttackAbility_name, ETowerAttackAbility_value)
	proto.RegisterEnum("ETowerAttackUpgradeType", ETowerAttackUpgradeType_name, ETowerAttackUpgradeType_value)
	proto.RegisterEnum("ETowerAttackEnemyType", ETowerAttackEnemyType_name, ETowerAttackEnemyType_value)
	proto.RegisterEnum("ETowerAttackEvent", ETowerAttackEvent_name, ETowerAttackEvent_value)
}
